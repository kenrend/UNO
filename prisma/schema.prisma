// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Game {
  id              String   @id @default(cuid())
  code            String   @unique
  status          GameStatus @default(WAITING)
  currentPlayerIndex Int     @default(0)
  direction       Int      @default(1) // 1 for clockwise, -1 for counter-clockwise
  deck            String   // JSON string of card IDs
  discardPile     String   // JSON string of card IDs
  currentColor    String?  // Current color in play
  currentValue    String?  // Current value in play
  maxPlayers      Int      @default(4)
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  players         Player[]
}

model Player {
  id        String   @id @default(cuid())
  gameId    String
  name      String
  socketId  String?
  hand      String   // JSON string of card IDs
  position  Int      // Position around the table (0-3)
  isReady   Boolean  @default(false)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  game      Game     @relation(fields: [gameId], references: [id], onDelete: Cascade)
  
  @@unique([gameId, socketId])
}

model Card {
  id     String @id @default(cuid())
  color  CardColor
  value  String
  type   CardType @default(NUMBER)
  
  @@unique([color, value, type])
}

enum GameStatus {
  WAITING
  PLAYING
  FINISHED
}

enum CardColor {
  RED
  BLUE
  GREEN
  YELLOW
  WILD
}

enum CardType {
  NUMBER
  SKIP
  REVERSE
  DRAW_TWO
  WILD
  WILD_DRAW_FOUR
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  name      String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Post {
  id        String   @id @default(cuid())
  title     String
  content   String?
  published Boolean  @default(false)
  authorId  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}